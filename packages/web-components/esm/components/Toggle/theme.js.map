{"version":3,"sources":["../../../src/components/Toggle/theme.ts"],"names":["dsl","toggleTheme","scheme","Label","props","size","p","valignSelf","labelPosition","start","mr","end","ml","disabled","color","Switch","style","bg","colorDisabled","borderColorDisabled","borderStyle","borderWidth","focus","variant","styleMap","primary","outline","secondary","success","warning","error","checked","bgDisabled","fill","borderBase","bgHover","borderColor","borderColorHover","hover"],"mappings":"AAAA,SAAmCA,GAAnC,QAAsD,aAAtD;AAEA,OAAO,IAAMC,WAAqC,GAAG;AACnDC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,cAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACD,IAAN;AAAA,SADF;AAELE,QAAAA,UAAU,EAAE;AAFP,OADF;AAKLC,MAAAA,aAAa,EAAE;AACbC,QAAAA,KAAK,EAAE;AACLL,UAAAA,KAAK,EAAE;AACLM,YAAAA,EAAE,EAAE,YAAAJ,CAAC;AAAA,qBAAIA,CAAC,CAACD,IAAF,KAAW,GAAX,GAAiB,CAAjB,GAAqB,CAAzB;AAAA;AADA;AADF,SADM;AAMbM,QAAAA,GAAG,EAAE;AACHP,UAAAA,KAAK,EAAE;AACLQ,YAAAA,EAAE,EAAE,YAAAN,CAAC;AAAA,qBAAIA,CAAC,CAACD,IAAF,KAAW,GAAX,GAAiB,CAAjB,GAAqB,CAAzB;AAAA;AADA;AADJ;AANQ,OALV;AAiBLQ,MAAAA,QAAQ,EAAE;AACRT,QAAAA,KAAK,EAAE;AACLU,UAAAA,KAAK,EAAE;AADF;AADC;AAjBL,KADD;AAwBNC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE;AACLC,QAAAA,EAAE,EAAE,OADC;AAELC,QAAAA,aAAa,EAAE,OAFV;AAGLC,QAAAA,mBAAmB,EAAE,QAHhB;AAILC,QAAAA,WAAW,EAAE,OAJR;AAKLC,QAAAA,WAAW,EAAE,CALR;AAMLC,QAAAA,KAAK,EAAE;AANF,OADD;AASNC,MAAAA,OAAO,EAAEvB,GAAG,CAACwB,QAAJ,CAAa;AACpBC,QAAAA,OAAO,EAAEC,OAAO,CAAC,QAAD,EAAW,QAAX,CADI;AAEpBC,QAAAA,SAAS,EAAED,OAAO,CAAC,OAAD,EAAU,QAAV,CAFE;AAGpBE,QAAAA,OAAO,EAAEF,OAAO,CAAC,UAAD,EAAa,UAAb,CAHI;AAIpBG,QAAAA,OAAO,EAAEH,OAAO,CAAC,WAAD,EAAc,WAAd,CAJI;AAKpBI,QAAAA,KAAK,EAAEJ,OAAO,CAAC,QAAD,EAAW,QAAX;AALM,OAAb,CATH;AAgBNK,MAAAA,OAAO,EAAE;AACPf,QAAAA,KAAK,EAAE;AACLgB,UAAAA,UAAU,EAAE;AADP,SADA;AAIPT,QAAAA,OAAO,EAAEvB,GAAG,CAACwB,QAAJ,CAAa;AACpBC,UAAAA,OAAO,EAAEQ,IAAI,CAAC,SAAD,EAAY,SAAZ,CADO;AAEpBN,UAAAA,SAAS,EAAEM,IAAI,CAAC,SAAD,EAAY,SAAZ,CAFK;AAGpBL,UAAAA,OAAO,EAAEK,IAAI,CAAC,UAAD,EAAa,UAAb,CAHO;AAIpBJ,UAAAA,OAAO,EAAEI,IAAI,CAAC,WAAD,EAAc,WAAd,CAJO;AAKpBH,UAAAA,KAAK,EAAEG,IAAI,CAAC,QAAD,EAAW,QAAX;AALS,SAAb;AAJF;AAhBH;AAxBF;AAD2C,CAA9C;;AAyDP,SAASP,OAAT,CAAiBQ,UAAjB,EAAqCC,OAArC,EAAsD;AACpD,SAAO;AACLC,IAAAA,WAAW,EAAEF,UADR;AAELG,IAAAA,gBAAgB,EAAEF;AAFb,GAAP;AAID;;AAED,SAASF,IAAT,CAAchB,EAAd,EAA0BqB,KAA1B,EAAyC;AACvC,SAAO;AACLrB,IAAAA,EAAE,EAAFA,EADK;AAELmB,IAAAA,WAAW,EAAEnB,EAFR;AAGLkB,IAAAA,OAAO,EAAEG,KAHJ;AAILD,IAAAA,gBAAgB,EAAEC;AAJb,GAAP;AAMD","sourcesContent":["import { DeepPartial, ToggleTheme, dsl, Colors } from '@avito/core'\n\nexport const toggleTheme: DeepPartial<ToggleTheme> = {\n  scheme: {\n    Label: {\n      props: {\n        size: p => p.size,\n        valignSelf: 'middle',\n      },\n      labelPosition: {\n        start: {\n          props: {\n            mr: p => p.size === 's' ? 6 : 8,\n          },\n        },\n        end: {\n          props: {\n            ml: p => p.size === 's' ? 6 : 8,\n          },\n        },\n      },\n      disabled: {\n        props: {\n          color: 'gray40',\n        },\n      },\n    },\n    Switch: {\n      style: {\n        bg: 'white',\n        colorDisabled: 'gray4',\n        borderColorDisabled: 'gray20',\n        borderStyle: 'solid',\n        borderWidth: 1,\n        focus: true,\n      },\n      variant: dsl.styleMap({\n        primary: outline('gray20', 'gray28'),\n        secondary: outline('gray4', 'gray10'),\n        success: outline('green500', 'green600'),\n        warning: outline('orange500', 'orange600'),\n        error: outline('red500', 'red600'),\n      }),\n      checked: {\n        style: {\n          bgDisabled: 'gray20',\n        },\n        variant: dsl.styleMap({\n          primary: fill('blue500', 'blue600'),\n          secondary: fill('blue500', 'blue600'),\n          success: fill('green500', 'green600'),\n          warning: fill('orange500', 'orange600'),\n          error: fill('red500', 'red600'),\n        }),\n      },\n    },\n  },\n}\n\nfunction outline(borderBase: Colors, bgHover: Colors) {\n  return {\n    borderColor: borderBase,\n    borderColorHover: bgHover,\n  }\n}\n\nfunction fill(bg: Colors, hover: Colors) {\n  return {\n    bg,\n    borderColor: bg,\n    bgHover: hover,\n    borderColorHover: hover,\n  }\n}\n"],"file":"theme.js"}