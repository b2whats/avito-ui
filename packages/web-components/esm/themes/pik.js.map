{"version":3,"sources":["../../src/themes/pik.ts"],"names":["dsl","CrossIcon","textControlTheme","style","placeholderColor","borderWidth","borderRadius","bgFocus","focus","variant","styleMap","primary","pikInput","secondary","error","warning","success","size","s","m","l","preset","inverse","bg","bgDisabled","borderColor","pikTheme","font","fontFamily","fontSize","xl","dimension","rowHeight","Text","scheme","xs","xxl","xxxl","Button","pressedOffset","px","multiline","minWidth","height","bgHover","bgActive","newDefault","color","Input","IconAfter","clearable","component","Select","Textarea","IconClear","border","borderColorHover","borderColorFocus"],"mappings":"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","sourcesContent":["import { Theme, dsl, DeepPartial, StyleProperties, Colors } from '@avito/core'\nimport { CrossIcon } from '@avito/core/icons'\n\ndeclare module '@avito/core' {\n  enum InputPreset { inverse }\n}\n\nconst textControlTheme = {\n  style: {\n    placeholderColor: 'gray44',\n    borderWidth: 1,\n    borderRadius: 4,\n    bgFocus: 'white',\n    focus: false,\n  },\n  variant: dsl.styleMap({\n    primary: pikInput('gray4', 'gray16'),\n    secondary: pikInput('gray8', 'gray20'),\n    error: pikInput('red50', 'red300'),\n    warning: pikInput('orange50', 'orange300'),\n    success: pikInput('green50', 'green300'),\n  }),\n  size: dsl.styleMap('px', {\n    s: 16,\n    m: 16,\n    l: 16,\n  }),\n  preset: {\n    inverse: {\n      variant: {\n        primary: {\n          style: {\n            bg: 'white',\n            bgDisabled: 'white',\n            borderColor: 'white',\n          },\n        },\n      },\n    },\n  },\n}\n\nexport const pikTheme: DeepPartial<Theme> = {\n  font: {\n    fontFamily: 'Avito,\"Helvetica Neue\",Helvetica,sans-serif',\n    fontSize: {\n      xl: 24,\n    },\n  },\n  dimension: {\n    rowHeight: {\n      s: 36,\n      m: 48,\n      l: 56,\n    },\n  },\n  Text: {\n    scheme: {\n      Text: {\n        size: dsl.styleMap('lineHeight', {\n          xs: 1.23,\n          s: 1.43,\n          m: 1.5,\n          l: 1.4,\n          xl: 1.34,\n          xxl: 1.25,\n          xxxl: 1.2,\n        }),\n      },\n    },\n  },\n  Button: {\n    scheme: {\n      Button: {\n        style: {\n          borderRadius: 4,\n          pressedOffset: 0,\n        },\n        size: {\n          s: {\n            style: {\n              px: 24,\n            },\n          },\n          m: {\n            style: {\n              px: 24,\n            },\n          },\n          l: {\n            style: {\n              px: 36,\n            },\n            multiline: {\n              style: {\n                minWidth: 290,\n                px: 48,\n                height: 64,\n              },\n            },\n          },\n        },\n        preset: {\n          default: {\n            style: {\n              borderColor: 'gray16',\n              bgHover: 'gray4',\n              bgActive: 'gray8',\n            },\n          },\n          newDefault: {\n            style: {\n              bg: 'gray4',\n              bgHover: 'gray8',\n              bgActive: 'gray12',\n            },\n          },\n          warning: {\n            style: {\n              color: 'white',\n            },\n          },\n        },\n      },\n    },\n  },\n  Input: {\n    scheme: {\n      Input: textControlTheme,\n      IconAfter: {\n        clearable: {\n          component: CrossIcon,\n        },\n      },\n    },\n  },\n  Select: {\n    scheme: {\n      Input: {\n        size: dsl.styleMap('pr', { s: 11, m: 11, l: 11 }),\n      },\n    },\n  },\n  Textarea: {\n    scheme: {\n      Textarea: textControlTheme,\n      IconClear: {\n        component: CrossIcon,\n      },\n    },\n  },\n}\n\nfunction pikInput(bg: Colors, border: Colors): StyleProperties {\n  return {\n    bg,\n    borderColor: bg,\n    borderColorHover: border,\n    borderColorFocus: border,\n  }\n}\n"],"file":"pik.js"}