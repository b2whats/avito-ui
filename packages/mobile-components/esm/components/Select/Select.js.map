{"version":3,"sources":["../../../src/components/Select/Select.tsx"],"names":["React","PureComponent","Input","SelectPopup","getItemById","items","id","keyProperty","find","item","Select","state","isPopupOpened","handleWrapperClick","setPopupVisible","handlePopupCancel","handlePopupConfirm","key","setValue","handleInputChange","props","required","selectedKey","resetValue","f","setState","onChange","render","title","displayProperty","selectedObject","value","defaultProps"],"mappings":"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","sourcesContent":["//@ts-nocheck\nimport React, { PureComponent } from 'react'\nimport { Input } from '../../'\nimport { SelectPopup } from './SelectPopup'\n\nfunction getItemById(items, id, keyProperty) {\n  return items.find(item => item[keyProperty] === id)\n}\n\nexport class Select extends PureComponent {\n  static defaultProps = {\n    keyProperty: 'id',\n    displayProperty: 'title',\n    required: false,\n  }\n\n  state = {\n    isPopupOpened: false,\n  }\n\n  render() {\n    const { title, items, keyProperty, displayProperty, required, selectedKey, ...props } = this.props\n    const { isPopupOpened } = this.state\n    const selectedObject = getItemById(items, selectedKey, keyProperty)\n    const value = selectedObject && selectedObject[displayProperty]\n\n    return (\n      <>\n        <Input\n          {...props}\n          placeholder={title}\n          value={value}\n          required={required}\n          readOnly\n          clearable\n          onMouseDown={this.handleWrapperClick}\n          onChange={this.handleInputChange} />\n\n        {\n          isPopupOpened &&\n            <SelectPopup\n              items={items}\n              title={title}\n              keyProperty={keyProperty}\n              displayProperty={displayProperty}\n              selectedKey={selectedKey}\n              onCancel={this.handlePopupCancel}\n              onConfirm={this.handlePopupConfirm} />\n        }\n      </>\n    )\n  }\n\n  handleWrapperClick = () => {\n    this.setPopupVisible(true)\n  }\n\n  handlePopupCancel = () => {\n    this.setPopupVisible(false)\n  }\n\n  handlePopupConfirm = key => {\n    this.setPopupVisible(false)\n    this.setValue(key)\n  }\n\n  handleInputChange = () => {\n    const { required, selectedKey } = this.props\n    if (selectedKey && !required) {\n      this.resetValue()\n    } else {\n      this.setPopupVisible(true)\n    }\n  }\n\n  setPopupVisible = (f) => {\n    this.setState({\n      isPopupOpened: f,\n    })\n  }\n\n  setValue = key => {\n    const { onChange } = this.props\n    if (onChange) {\n      onChange(key)\n    }\n  }\n\n  resetValue = () => {\n    this.setValue(null)\n  }\n}\n"],"file":"Select.js"}