{"version":3,"sources":["../../src/theme/ThemeProvider.tsx"],"names":["ThemeProvider","defaultTheme","tokens","theme","children","globalTheme","currentTeme","isMobileSafari","document","body","setAttribute"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;AAIO,SAASA,aAAT,OAAkF;AAAA,+BAAzDC,YAAyD;AAAA,MAAzDA,YAAyD,kCAA1CC,cAA0C;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AACvF,MAAMC,WAAW,GAAG,yBAApB;AACA,MAAMC,WAAW,GAAG,4BAAWL,YAAX,EAAyBI,WAAzB,EAAsCF,KAAtC,CAApB;AAEA,wBAAU,YAAM;AACd;AACAI,6BAAkBC,QAAQ,CAACC,IAAT,CAAcC,YAAd,CAA2B,cAA3B,EAA2C,EAA3C,CAAlB;AACD,GAHD,EAGG,EAHH;AAKA,SACE,eAAC,6BAAD;AAAsB,IAAA,KAAK,EAAEJ;AAA7B,KACGF,QADH,CADF;AAKD","sourcesContent":["import { ThemeProvider as EmotionThemeProvider } from 'emotion-theming'\nimport React, { useEffect } from 'react'\nimport { tokens, Tokens } from '@avito/tokens'\nimport { isMobileSafari, DeepPartial } from '../utils/'\nimport { Theme } from './contract'\nimport { mergeTheme } from './mergeTheme'\nimport { useTheme } from './useTheme'\n\ntype ProviderProps = { children: React.ReactNode, defaultTheme?: Tokens, theme?: DeepPartial<Theme> }\n\nexport function ThemeProvider({ defaultTheme = tokens, theme, children }: ProviderProps) {\n  const globalTheme = useTheme()\n  const currentTeme = mergeTheme(defaultTheme, globalTheme, theme)\n\n  useEffect(() => {\n    // необходимо для mobile safari что бы в нем работали состояния :active\n    isMobileSafari && document.body.setAttribute('ontouchstart', '')\n  }, [])\n\n  return (\n    <EmotionThemeProvider theme={currentTeme}>\n      {children}\n    </EmotionThemeProvider>\n  )\n}\n"],"file":"ThemeProvider.js"}