{"version":3,"sources":["../../src/theme/dsl.ts"],"names":["wrapValues","wrapKey","map","res","key","propMap","styleMap","dsl"],"mappings":";;;;;AAEO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAA0BC,OAA1B,EAAwCC,GAAxC,EAAqD;AAC7E,MAAMC,GAAQ,GAAG,EAAjB;;AACA,OAAK,IAAMC,GAAX,IAAkBF,GAAlB,EAAuB;AAAA;;AACrBC,IAAAA,GAAG,CAACC,GAAD,CAAH,4BAAcH,OAAd,IAAwBC,GAAG,CAACE,GAAD,CAA3B;AACD;;AACD,SAAOD,GAAP;AACD,CANM;;;;AAaA,IAAME,OAA8B,GAAG,SAAjCA,OAAiC,CAACD,GAAD,EAAWF,GAAX;AAAA,SAC5CF,UAAU,CAAC,OAAD,EAAUE,GAAG,GAAGF,UAAU,CAACI,GAAD,EAAMF,GAAN,CAAb,GAA0BE,GAAvC,CADkC;AAAA,CAAvC;;;;AAGA,IAAME,QAA+B,GAAG,SAAlCA,QAAkC,CAACF,GAAD,EAAWF,GAAX;AAAA,SAC7CF,UAAU,CAAC,OAAD,EAAUE,GAAG,GAAGF,UAAU,CAACI,GAAD,EAAMF,GAAN,CAAb,GAA0BE,GAAvC,CADmC;AAAA,CAAxC;;;AAGA,IAAMG,GAAG,GAAG;AACjBP,EAAAA,UAAU,EAAVA,UADiB;AAEjBM,EAAAA,QAAQ,EAARA,QAFiB;AAGjBD,EAAAA,OAAO,EAAPA;AAHiB,CAAZ","sourcesContent":["type WrappedMap<Key extends string, Map> = { [MapKey in keyof Map]: { [key in Key]: Map[MapKey] } }\n\nexport const wrapValues = <Key extends string, Map>(wrapKey: Key, map: Map) => {\n  const res: any = {}\n  for (const key in map) {\n    res[key] = { [wrapKey]: map[key] } as any\n  }\n  return res as WrappedMap<Key, Map>\n}\n\ninterface MaybeWrapMap<TopKey extends string> {\n  <Map>(map: Map): WrappedMap<TopKey, Map>\n  <ItemKey extends string, Map>(itemKey: ItemKey, map: Map): WrappedMap<TopKey, WrappedMap<ItemKey, Map>>\n}\n\nexport const propMap: MaybeWrapMap<'props'> = (key: any, map?: any) =>\n  wrapValues('props', map ? wrapValues(key, map) : key)\n\nexport const styleMap: MaybeWrapMap<'style'> = (key: any, map?: any) =>\n  wrapValues('style', map ? wrapValues(key, map) : key)\n\nexport const dsl = {\n  wrapValues,\n  styleMap,\n  propMap,\n}\n"],"file":"dsl.js"}