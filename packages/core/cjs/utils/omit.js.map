{"version":3,"sources":["../../src/utils/omit.ts"],"names":["omit","obj","ret","key","keys","includes"],"mappings":";;;;;AAOO,IAAMA,IAAY,GAAG,SAAfA,IAAe,CAACC,GAAD,EAAkB;AAC5C,MAAIC,GAAQ,GAAG,EAAf;AAEA,MAAIC,GAAJ;;AAH4C,oCAATC,IAAS;AAATA,IAAAA,IAAS;AAAA;;AAI5C,OAAKD,GAAL,IAAYF,GAAZ,EAAiB;AACf,QAAI,CAAEG,IAAI,CAACC,QAAL,CAAcF,GAAd,CAAN,EAA2B;AACzBD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWF,GAAG,CAACE,GAAD,CAAd;AACD;AACF;;AACD,SAAOD,GAAP;AACD,CAVM","sourcesContent":["interface OmitFn {\n  <T, K extends (keyof T)[]>\n  (obj: T, ...keys: K): {\n      [K2 in Exclude<keyof T, K[number]>]: T[K2]\n  }\n}\n\nexport const omit: OmitFn = (obj, ...keys) => {\n  let ret: any = {}\n\n  let key: keyof typeof obj\n  for (key in obj) {\n    if (!(keys.includes(key))) {\n      ret[key] = obj[key]\n    }\n  }\n  return ret\n}\n"],"file":"omit.js"}