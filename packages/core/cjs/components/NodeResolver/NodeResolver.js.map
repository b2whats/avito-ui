{"version":3,"sources":["../../../src/components/NodeResolver/NodeResolver.tsx"],"names":["NodeResolver","ref","children","nodes","setRef","node","current","anchor","nextSibling","nextElement","tmp","parent","parentNode","document","createComment","contains","replaceChild","displayName"],"mappings":";;;;;;;AAAA;;;;AASO,IAAMA,YAAY,gBAAG,uBAAsD,gBAAeC,GAAf,EAAuB;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;AACvG,MAAMC,KAAK,GAAG,mBAAc,IAAd,CAAd;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAA8B;AAC3C,QAAIF,KAAK,CAACG,OAAV,EAAmB;AACjB,UAAIH,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,WAArB,KAAqCL,KAAK,CAACG,OAAN,CAAcG,WAAvD,EAAoE;AAEpEN,MAAAA,KAAK,CAACG,OAAN,CAAcG,WAAd,GAA4BN,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,WAAjD;AACD,KAJD,MAIO,IAAIH,IAAJ,EAAU;AAAA,2BACiBF,KAAK,CAACG,OAAN,GAAgB;AAC9CI,QAAAA,GAAG,EAAEL,IADyC;AAE9CM,QAAAA,MAAM,EAAEN,IAAI,CAACO,UAFiC;AAG9CL,QAAAA,MAAM,EAAEM,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAHsC;AAI9CL,QAAAA,WAAW,EAAE;AAJiC,OADjC;AAAA,UACPC,GADO,kBACPA,GADO;AAAA,UACFC,MADE,kBACFA,MADE;AAAA,UACMJ,MADN,kBACMA,MADN;;AAQf,UAAII,MAAM,IAAIA,MAAM,CAACI,QAAP,CAAgBL,GAAhB,CAAd,EAAoC;AAClCC,QAAAA,MAAM,CAACK,YAAP,CAAoBT,MAApB,EAA4BG,GAA5B;AAEAP,QAAAA,KAAK,CAACG,OAAN,CAAcG,WAAd,GAA4BF,MAAM,CAACC,WAAnC;AACD;AACF;;AAED,QAAI,CAACP,GAAL,EAAU;AAEV,QAAMQ,WAAW,GAAGN,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACG,OAAN,CAAcG,WAAnD;;AAEA,QAAI,OAAOR,GAAP,KAAe,UAAnB,EAA+B;AAC7BA,MAAAA,GAAG,CAACQ,WAAD,CAAH;AACD,KAFD,MAEO,IAAI,OAAOR,GAAP,KAAe,QAAnB,EAA6B;AAClCA,MAAAA,GAAG,CAACK,OAAJ,GAAcG,WAAd;AACD;AACF,GA7BD;;AA+BA,wBAAU;AAAA,WAAM,YAAM;AACpB,UAAI,CAACN,KAAK,CAACG,OAAX,EAAoB;AADA,4BAGYH,KAAK,CAACG,OAHlB;AAAA,UAGZI,GAHY,mBAGZA,GAHY;AAAA,UAGPC,MAHO,mBAGPA,MAHO;AAAA,UAGCJ,MAHD,mBAGCA,MAHD;;AAKpB,UAAII,MAAM,IAAID,GAAV,IAAiBH,MAArB,EAA6B;AAC3BI,QAAAA,MAAM,CAACK,YAAP,CAAoBN,GAApB,EAAyBH,MAAzB;AACD;;AAEDJ,MAAAA,KAAK,CAACG,OAAN,GAAgB,IAAhB;AACD,KAVS;AAAA,GAAV,EAUG,EAVH;AAYA,SACE,eAAC,iBAAD,CAAO,QAAP,QACE;AAAM,IAAA,GAAG,EAAEF,MAAX;AAAmB,IAAA,MAAM;AAAzB,IADF,EAEGF,QAFH,CADF;AAMD,CApD2B,CAArB;;AAsDPF,YAAY,CAACiB,WAAb,GAA2B,cAA3B","sourcesContent":["import React, { forwardRef, useRef, useEffect } from 'react'\n\ntype Nodes = {\n  tmp: HTMLElement,\n  parent: HTMLElement,\n  anchor: Comment,\n  nextElement: Element | null,\n} | null\n\nexport const NodeResolver = forwardRef<Element, { children: React.ReactElement }>(({ children }, ref) => {\n  const nodes = useRef<Nodes>(null)\n\n  const setRef = (node: HTMLElement | null) => {\n    if (nodes.current) {\n      if (nodes.current.anchor.nextSibling === nodes.current.nextElement) return\n\n      nodes.current.nextElement = nodes.current.anchor.nextSibling as Element\n    } else if (node) {\n      const { tmp, parent, anchor } = nodes.current = {\n        tmp: node,\n        parent: node.parentNode as HTMLElement,\n        anchor: document.createComment('anchor'),\n        nextElement: null,\n      }\n\n      if (parent && parent.contains(tmp)) {\n        parent.replaceChild(anchor, tmp)\n\n        nodes.current.nextElement = anchor.nextSibling as Element\n      }\n    }\n\n    if (!ref) return\n\n    const nextElement = nodes.current && nodes.current.nextElement\n\n    if (typeof ref === 'function') {\n      ref(nextElement)\n    } else if (typeof ref === 'object') {\n      ref.current = nextElement\n    }\n  }\n\n  useEffect(() => () => {\n    if (!nodes.current) return\n\n    const { tmp, parent, anchor } = nodes.current\n\n    if (parent && tmp && anchor) {\n      parent.replaceChild(tmp, anchor)\n    }\n\n    nodes.current = null\n  }, [])\n\n  return (\n    <React.Fragment>\n      <span ref={setRef} hidden />\n      {children}\n    </React.Fragment>\n  )\n})\n\nNodeResolver.displayName = 'NodeResolver'\n"],"file":"NodeResolver.js"}