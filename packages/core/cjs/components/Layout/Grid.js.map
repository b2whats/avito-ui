{"version":3,"sources":["../../../src/components/Layout/Grid.tsx"],"names":["gridWrapperClassName","_","props","display","width","align","undefined","valign","textRules","debug","gridClassName","spacing","spacingY","space","palette","blue200","yellow200","Grid","children","theme","gridWrapperStyle","gridStyle"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAGA;AACA,IAAMA,oBAAoB,GAAG,mCAC3B,UAACC,CAAD,EAAIC,KAAJ;AAAA;AACEC,IAAAA,OAAO,EAAE,OADX;AAEEC,IAAAA,KAAK,EAAE;AAFT,KAGKF,KAHL;AAIEG,IAAAA,KAAK,EAAEC,SAJT;AAKEC,IAAAA,MAAM,EAAED;AALV;AAAA,CAD2B,EAQ3B,UAACE,SAAD;AAAA,MAAcC,KAAd,QAAcA,KAAd;AAAA,0FAMIA,KAAK,6CAEH,EARN,iBAUID,SAVJ;AAAA,CAR2B,CAA7B;AAsBA,IAAME,aAAa,GAAG,mCACpB,UAACT,CAAD,EAAIC,KAAJ;AAAA,SAAe;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbE,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAFA;AAGbE,IAAAA,MAAM,EAAEL,KAAK,CAACK;AAHD,GAAf;AAAA,CADoB,EAMpB,UAACC,SAAD;AAAA,MAAcG,OAAd,SAAcA,OAAd;AAAA,MAAuBC,QAAvB,SAAuBA,QAAvB;AAAA,MAAiCH,KAAjC,SAAiCA,KAAjC;AAAA,MAA4CI,KAA5C,SAA4CA,KAA5C;AAAA,MAAmDC,OAAnD,SAAmDA,OAAnD;AAAA,6CAGIH,OAAO,+BACSE,KAAK,CAACF,OAAD,CAAL,IAAkBA,OAD3B,mDAGUE,KAAK,CAACF,OAAD,CAAL,IAAkBA,OAH5B,oFAML,EATN,gBAUIC,QAAQ,8BACOC,KAAK,CAACD,QAAD,CAAL,IAAmBA,QAD1B,kDAGQC,KAAK,CAACD,QAAD,CAAL,IAAmBA,QAH3B,2BAKN,EAfN,kBAiBIH,KAAK,mDAEiBK,OAAO,CAACC,OAFzB,mHAOiBD,OAAO,CAACE,SAPzB,wBASH,EA1BN,iBA4BIR,SA5BJ;AAAA,CANoB,CAAtB;;AAsCO,IAAMS,IAAI,GAAG,SAAPA,IAAO,QAAuC;AAAA,MAApCC,QAAoC,SAApCA,QAAoC;AAAA,MAAvBhB,KAAuB;AACzD,MAAMiB,KAAK,GAAG,sBAAd;AACA,MAAMC,gBAAgB,GAAGpB,oBAAoB,CAACE,KAAD,EAAQiB,KAAR,CAA7C;AACA,MAAME,SAAS,GAAGX,aAAa,CAACR,KAAD,EAAQiB,KAAR,CAA/B;AAEA,SACE;AAAK,IAAA,GAAG,EAAEC;AAAV,KACE;AAAK,IAAA,GAAG,EAAEC;AAAV,KACIH,QADJ,CADF,CADF;AAOD,CAZM","sourcesContent":["import React from 'react'\nimport { createClassName } from '../../styled-system/'\nimport { useTheme } from '../../theme/'\nimport { GridProps } from './contract'\n\n// &::before хак против выпадания отрицательных margins из родителя для правильного задания высоты\nconst gridWrapperClassName = createClassName<GridProps>(\n  (_, props) => ({\n    display: 'block',\n    width: 1,\n    ...props,\n    align: undefined,\n    valign: undefined,\n  }),\n  (textRules, { debug }) => (`\n    &::before {\n      content: '';\n      display: table;\n    }\n\n    ${debug ? `\n      outline: 1px solid red;\n    ` : ''}\n\n    ${textRules}\n  `)\n)\n\nconst gridClassName = createClassName<GridProps>(\n  (_, props) => ({\n    display: 'flex',\n    align: props.align,\n    valign: props.valign,\n  }),\n  (textRules, { spacing, spacingY, debug }, { space, palette }) => (`\n    flex-wrap: wrap;\n\n    ${spacing ? `\n      margin-left: -${space[spacing] || spacing}px;\n      & > * {\n        border-left: ${space[spacing] || spacing}px solid transparent;\n        background-clip: padding-box;\n      }\n    ` : ''}\n    ${spacingY ? `\n      margin-top: -${space[spacingY] || spacingY}px;\n      & > * {\n        margin-top: ${space[spacingY] || spacingY}px;\n      }\n    ` : ''}\n\n    ${debug ? `\n      & > * {\n        background-color: ${palette.blue200};\n        background-clip: padding-box;\n      }\n\n      & > :nth-child(2n) {\n        background-color: ${palette.yellow200};\n      }\n    ` : ''}\n\n    ${textRules}\n  `)\n)\n\nexport const Grid = ({ children, ...props }: GridProps) => {\n  const theme = useTheme()\n  const gridWrapperStyle = gridWrapperClassName(props, theme)\n  const gridStyle = gridClassName(props, theme)\n\n  return (\n    <div css={gridWrapperStyle}>\n      <div css={gridStyle}>\n        { children }\n      </div>\n    </div>\n  )\n}\n"],"file":"Grid.js"}