{"version":3,"sources":["../../../src/components/Textarea/Textarea.tsx"],"names":["wrapperClassName","themeStyle","props","display","valign","Textarea","textareaTheme","onFocus","onBlur","theme","tokens","textareaRef","setTextareaRef","focus","setFocus","useSyntheticChange","value","onChange","hasClear","Boolean","clearable","disabled","placeholder","deletePlaceholderOnFocus","handleFocus","handleBlur","handlePreventBlur","event","target","preventDefault","handleClear","current","IconClear","wrapperStyle","style","elementState","undefined"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,IAAMA,gBAAgB,GAAG,mCACvB,UAACC,UAAD,EAAaC,KAAb;AAAA;AACEC,IAAAA,OAAO,EAAE,MADX;AAEEC,IAAAA,MAAM,EAAE;AAFV,KAGKH,UAHL,EAIKC,KAJL;AAAA,CADuB,CAAzB;AAUO,IAAMG,QAAQ,GAAG,wBAAY,UAAZ,EAAwBC,qBAAxB,EAA2E,8BAI9F;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAHQC,MAGR,QAHQA,MAGR;AAAA,MAHmBN,KAGnB;AAAA,MAFDO,KAEC,SAFDA,KAEC;AAAA,MAFMC,MAEN,SAFMA,MAEN;AAAA,MADFC,WACE;AAAA,MADWC,cACX;;AAAA,kBACuB,qBAAS,KAAT,CADvB;AAAA,MACIC,KADJ;AAAA,MACWC,QADX;;AAAA,4BAEuBC,wCAAsB,qCAAyBb,KAAzB,CAAtB,CAFvB;AAAA,MAEIc,KAFJ;AAAA,MAEWC,QAFX;;AAGH,MAAMC,QAAQ,GAAGC,OAAO,CAACjB,KAAK,CAACkB,SAAP,CAAxB;AAEAlB,EAAAA,KAAK,iCACAA,KADA;AAEHc,IAAAA,KAAK,EAALA,KAFG;AAGHI,IAAAA,SAAS,EAAED,OAAO,CAACH,KAAK,IAAI,CAACd,KAAK,CAACmB,QAAhB,KAA6BnB,KAAK,CAACkB,SAAN,KAAoB,QAApB,IAAgClB,KAAK,CAACkB,SAAN,IAAmBP,KAAhF,CAAD,CAHf;AAIHS,IAAAA,WAAW,EAAEb,KAAK,CAACc,wBAAN,IAAkCV,KAAlC,GAA0C,EAA1C,GAA+CX,KAAK,CAACoB;AAJ/D,IAAL;AAOA,MAAME,WAAW,GAAG,sBAAU;AAAA,WAAMV,QAAQ,CAAC,IAAD,CAAd;AAAA,GAAV,EAAgCP,OAAhC,CAApB;AACA,MAAMkB,UAAU,GAAG,sBAAU;AAAA,WAAMX,QAAQ,CAAC,KAAD,CAAd;AAAA,GAAV,EAAiCN,MAAjC,CAAnB;;AAEA,MAAMkB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAA0C;AAClE,QAAIA,KAAK,CAACC,MAAN,CAAa,SAAb,MAA4B,UAAhC,EAA4CD,KAAK,CAACE,cAAN;AAC7C,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAM,uBAAWnB,WAAW,CAACoB,OAAvB,CAAN;AAAA,GAApB;;AAnBG,yBAqB6B,mCAAgB7B,KAAhB,EAAuBO,KAAvB,CArB7B;AAAA,MAqBKJ,QArBL,oBAqBKA,QArBL;AAAA,MAqBe2B,SArBf,oBAqBeA,SArBf;;AAsBH,MAAMC,YAAY,GAAGjC,gBAAgB,CAACE,KAAD,EAAQQ,MAAR,EAAgBL,QAAQ,CAAC6B,KAAzB,CAArC;AAEA,MAAMC,YAAY,IAAMjC,KAAK,CAACmB,QAAN,GAAiB,UAAjB,GAA8B,EAApC,WAA0CR,KAAK,GAAG,OAAH,GAAa,EAA5D,CAAlB;AAEA,SACE;AAAO,IAAA,GAAG,EAAEoB,YAAZ;AAA0B,kBAAYE,YAAtC;AAAoD,IAAA,WAAW,EAAET;AAAjE,KACE,eAAC,0BAAD,gCACMxB,KADN;AAEE,IAAA,QAAQ,EAAEe,QAFZ;AAGE,IAAA,GAAG,EAAEL,cAHP;AAIE,IAAA,OAAO,EAAEY,WAJX;AAKE,IAAA,MAAM,EAAEC;AALV,KADF,EAOIP,QAAQ,IAAI,eAAC,SAAD,CAAW,SAAX,gCACRc,SAAS,CAAC9B,KADF;AAEZ,IAAA,UAAU,EAAEkC,SAFA;AAGZ,IAAA,OAAO,EAAEN;AAHG,KAPhB,CADF;AAcD,CA5CuB,CAAjB","sourcesContent":["import React, { useState } from 'react'\nimport { useUncontrolledInputHook, useSyntheticChange } from '../../hooks/'\nimport { foldThemeParams, createClassName } from '../../styled-system/'\nimport { uiComponent } from '../../theme/'\nimport { invokeAll, clearValue } from '../../utils/'\nimport { TextareaProps } from './contract'\nimport { TextareaCore } from './TextareaCore'\nimport { textareaTheme } from './theme'\n\nconst wrapperClassName = createClassName<TextareaProps, typeof textareaTheme>(\n  (themeStyle, props) => ({\n    display: 'flex',\n    valign: 'top',\n    ...themeStyle,\n    ...props,\n  })\n)\n\n\nexport const Textarea = uiComponent('Textarea', textareaTheme)<TextareaProps, HTMLTextAreaElement>((\n  { onFocus, onBlur, ...props },\n  { theme, tokens },\n  [textareaRef, setTextareaRef]\n) => {\n  const [focus, setFocus] = useState(false)\n  const [value, onChange] = useSyntheticChange(...useUncontrolledInputHook(props))\n  const hasClear = Boolean(props.clearable)\n\n  props = {\n    ...props,\n    value,\n    clearable: Boolean(value && !props.disabled && (props.clearable === 'always' || props.clearable && focus)),\n    placeholder: theme.deletePlaceholderOnFocus && focus ? '' : props.placeholder,\n  }\n\n  const handleFocus = invokeAll(() => setFocus(true), onFocus)\n  const handleBlur = invokeAll(() => setFocus(false), onBlur)\n\n  const handlePreventBlur = (event: React.MouseEvent<HTMLElement>) => {\n    if (event.target['tagName'] !== 'TEXTAREA') event.preventDefault()\n  }\n\n  const handleClear = () => clearValue(textareaRef.current)\n\n  const { Textarea, IconClear } = foldThemeParams(props, theme)\n  const wrapperStyle = wrapperClassName(props, tokens, Textarea.style)\n\n  const elementState = `${props.disabled ? 'disabled' : ''} ${focus ? 'focus' : ''}`\n\n  return (\n    <label css={wrapperStyle} data-state={elementState} onMouseDown={handlePreventBlur}>\n      <TextareaCore\n        {...props}\n        onChange={onChange}\n        ref={setTextareaRef}\n        onFocus={handleFocus}\n        onBlur={handleBlur} />\n      { hasClear && <IconClear.component\n        {...IconClear.props}\n        valignSelf={undefined}\n        onClick={handleClear} /> }\n    </label>\n  )\n})\n"],"file":"Textarea.js"}