{"version":3,"sources":["../../../src/components/Tooltip/Tooltip.tsx"],"names":["tooltipClassName","themeStyle","props","display","minWidth","undefined","width","maxWidth","arrowClassName","textRules","_","__","offset","Tooltip","tooltipTheme","content","theme","tokens","children","Arrow","Close","tooltipStyle","style","arrowStyle","target","close","arrow","closable","component"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AAEA,IAAMA,gBAAgB,GAAG,mCACvB,UAACC,UAAD,EAAaC,KAAb;AAAA;AACEC,IAAAA,OAAO,EAAE;AADX,KAEKF,UAFL,EAGKC,KAHL;AAIEE,IAAAA,QAAQ,EAAEC,SAJZ;AAKEC,IAAAA,KAAK,EAAED,SALT;AAMEE,IAAAA,QAAQ,EAAEF;AANZ;AAAA,CADuB,CAAzB;AAWA,IAAMG,cAAc,GAAG,mCACrB,UAACP,UAAD;AAAA;AACEE,IAAAA,OAAO,EAAE;AADX,KAEKF,UAFL;AAAA,CADqB,EAKrB,UAACQ,SAAD,EAAYC,CAAZ,EAAeC,EAAf,EAAmBV,UAAnB;AAAA,gbAkBeA,UAAU,CAACW,MAlB1B,2EAqBYX,UAAU,CAACW,MArBvB,2EAwBcX,UAAU,CAACW,MAxBzB,2EA2BaX,UAAU,CAACW,MA3BxB,0BA8BIH,SA9BJ;AAAA,CALqB,CAAvB;AAuCO,IAAMI,OAAO,GAAG,wBAAY,SAAZ,EAAuBC,oBAAvB,EAAqC,uBAA4D;AAAA,MAAzDC,OAAyD,QAAzDA,OAAyD;AAAA,MAA7Cb,KAA6C;AAAA,MAApBc,KAAoB,SAApBA,KAAoB;AAAA,MAAbC,MAAa,SAAbA,MAAa;AACtH,MAAI,CAACF,OAAL,EAAc,OAAOb,KAAK,CAACgB,QAAb;;AADwG,yBAGpF,mCAAgBhB,KAAhB,EAAuBc,KAAvB,CAHoF;AAAA,MAG9GH,OAH8G,oBAG9GA,OAH8G;AAAA,MAGrGM,KAHqG,oBAGrGA,KAHqG;AAAA,MAG9FC,KAH8F,oBAG9FA,KAH8F;;AAItH,MAAMC,YAAY,GAAGrB,gBAAgB,CAACE,KAAD,EAAQe,MAAR,EAAgBJ,OAAO,CAACS,KAAxB,CAArC;AACA,MAAMC,UAAU,GAAGf,cAAc,CAACN,KAAD,EAAQe,MAAR,EAAgBE,KAAK,CAACG,KAAtB,CAAjC;;AAEA,MAAME,MAAiC,GAAG,SAApCA,MAAoC;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,WACxC;AAAK,MAAA,GAAG,EAAEJ;AAAV,OAA4B,wBAAYnB,KAAZ,CAA5B,GACGA,KAAK,CAACwB,KAAN,IAAe;AAAK,MAAA,GAAG,EAAEH,UAAV;AAAsB;AAAtB,MADlB,EAEGrB,KAAK,CAACyB,QAAN,IAAkBP,KAAK,CAACQ,SAAxB,IAAqC,eAAC,KAAD,CAAO,SAAP,gCAAqBR,KAAK,CAAClB,KAA3B;AAAkC,MAAA,OAAO,EAAEuB;AAA3C,OAFxC,EAGGV,OAHH,CADwC;AAAA,GAA1C;;AAQA,SACE,eAAC,sBAAD,gCAAgBb,KAAhB;AAAuB,IAAA,MAAM,EAAEsB;AAA/B,MACGtB,KAAK,CAACgB,QADT,CADF;AAKD,CApBsB,CAAhB","sourcesContent":["import React from 'react'\nimport { foldThemeParams, createClassName } from '../../styled-system/'\nimport { uiComponent } from '../../theme/'\nimport { filterProps } from '../../utils/'\nimport { Positioner, PositionerProps } from '../Positioner/'\nimport { TooltipProps } from './contract'\nimport { tooltipTheme } from './theme'\n\nconst tooltipClassName = createClassName<Omit<TooltipProps, 'minWidth' | 'width' | 'maxWidth'>, typeof tooltipTheme, 'Tooltip'>(\n  (themeStyle, props) => ({\n    display: 'block',\n    ...themeStyle,\n    ...props,\n    minWidth: undefined,\n    width: undefined,\n    maxWidth: undefined,\n  })\n)\n\nconst arrowClassName = createClassName<TooltipProps, typeof tooltipTheme, 'Arrow'>(\n  (themeStyle) => ({\n    display: 'inline-block',\n    ...themeStyle,\n  }),\n  (textRules, _, __, themeStyle) => `\n    visibility: hidden;\n    background-color: inherit;\n\n    &::before {\n      content: '';\n      box-sizing: border-box;\n      width: 100%;\n      height: 100%;\n      transform: rotate(45deg);\n      display: inline-block;\n      vertical-align: top;\n      visibility: visible;\n      background-color: inherit;\n      border-radius: inherit;\n    }\n\n    [data-popper-placement^='top'] & {\n      bottom: -${themeStyle.offset}px;\n    }\n    [data-popper-placement^='bottom'] & {\n      top: -${themeStyle.offset}px;\n    }\n    [data-popper-placement^='left'] & {\n      right: -${themeStyle.offset}px;\n    }\n    [data-popper-placement^='right'] & {\n      left: -${themeStyle.offset}px;\n    }\n\n    ${textRules}\n  `\n)\n\nexport const Tooltip = uiComponent('Tooltip', tooltipTheme)(({ content, ...props }: TooltipProps, { theme, tokens }) => {\n  if (!content) return props.children\n\n  const { Tooltip, Arrow, Close } = foldThemeParams(props, theme)\n  const tooltipStyle = tooltipClassName(props, tokens, Tooltip.style)\n  const arrowStyle = arrowClassName(props, tokens, Arrow.style)\n\n  const target: PositionerProps['target'] = ({ close }) => (\n    <div css={tooltipStyle} {...filterProps(props)}>\n      {props.arrow && <div css={arrowStyle} data-popper-arrow />}\n      {props.closable && Close.component && <Close.component {...Close.props} onClick={close} />}\n      {content}\n    </div>\n  )\n\n  return (\n    <Positioner {...props} target={target}>\n      {props.children}\n    </Positioner>\n  )\n})\n"],"file":"Tooltip.js"}