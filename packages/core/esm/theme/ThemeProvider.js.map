{"version":3,"sources":["../../src/theme/ThemeProvider.tsx"],"names":["ThemeProvider","EmotionThemeProvider","React","useEffect","tokens","isMobileSafari","mergeTheme","useTheme","defaultTheme","theme","children","globalTheme","currentTeme","document","body","setAttribute"],"mappings":"AAAA,SAASA,aAAa,IAAIC,oBAA1B,QAAsD,iBAAtD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAA+B,eAA/B;AACA,SAASC,cAAT;AAEA,SAASC,UAAT;AACA,SAASC,QAAT;;AAIA,OAAO,SAASP,aAAT,OAAkF;AAAA,+BAAzDQ,YAAyD;AAAA,MAAzDA,YAAyD,kCAA1CJ,MAA0C;AAAA,MAAlCK,KAAkC,QAAlCA,KAAkC;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AACvF,MAAMC,WAAW,GAAGJ,QAAQ,EAA5B;AACA,MAAMK,WAAW,GAAGN,UAAU,CAACE,YAAD,EAAeG,WAAf,EAA4BF,KAA5B,CAA9B;AAEAN,EAAAA,SAAS,CAAC,YAAM;AACd;AACAE,IAAAA,cAAc,IAAIQ,QAAQ,CAACC,IAAT,CAAcC,YAAd,CAA2B,cAA3B,EAA2C,EAA3C,CAAlB;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE,cAAC,oBAAD;AAAsB,IAAA,KAAK,EAAEH;AAA7B,KACGF,QADH,CADF;AAKD","sourcesContent":["import { ThemeProvider as EmotionThemeProvider } from 'emotion-theming'\nimport React, { useEffect } from 'react'\nimport { tokens, Tokens } from '@avito/tokens'\nimport { isMobileSafari, DeepPartial } from '../utils/'\nimport { Theme } from './contract'\nimport { mergeTheme } from './mergeTheme'\nimport { useTheme } from './useTheme'\n\ntype ProviderProps = { children: React.ReactNode, defaultTheme?: Tokens, theme?: DeepPartial<Theme> }\n\nexport function ThemeProvider({ defaultTheme = tokens, theme, children }: ProviderProps) {\n  const globalTheme = useTheme()\n  const currentTeme = mergeTheme(defaultTheme, globalTheme, theme)\n\n  useEffect(() => {\n    // необходимо для mobile safari что бы в нем работали состояния :active\n    isMobileSafari && document.body.setAttribute('ontouchstart', '')\n  }, [])\n\n  return (\n    <EmotionThemeProvider theme={currentTeme}>\n      {children}\n    </EmotionThemeProvider>\n  )\n}\n"],"file":"ThemeProvider.js"}