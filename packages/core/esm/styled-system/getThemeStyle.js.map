{"version":3,"sources":["../../src/styled-system/getThemeStyle.ts"],"names":["css","computedCrop","crop","targetHeight","value","Math","round","spaceValue","spaces","maps","inline","block","align","justifyContent","left","center","right","justify","alignColumn","alignFlex","top","middle","bottom","baseline","stretch","verticalAlign","dimension","width","maxWidth","minWidth","height","maxHeight","minHeight","color","colorHover","colorActive","colorVisited","colorFocus","colorChecked","colorDisabled","bg","bgHover","bgActive","bgVisited","bgFocus","bgChecked","bgDisabled","borderColor","borderColorHover","borderColorActive","borderColorVisited","borderColorFocus","borderColorChecked","borderColorDisabled","webkitSmoothing","auto","antialiased","subpixel","mozSmoothing","execComputables","object","arg","key","foldScheme","scheme","props","only","result","style","component","prop","includes","Object","assign","nestedConfig","switchBranch","data","getStyles","params","tokens","font","space","palette","focus","shape","margin","padding","hoverState","activeState","visitedState","focusState","disabledState","checkedState","display","colorRule","param","test","borderWidth","_param","undefined","fontSize","lineHeight","bold","light","underline","offset","rowHeight","borderStyle","borderRadius","column","push","abs","variant","assertExhaustive","length","join","selector","adjacentSelector","before","checked","visited","hover","active","disabled","endsWith","foldThemeParams","name","createClassName","createRule","createUserRule","theme","schemeStyle","styles","textRules","resultRules","v"],"mappings":"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","sourcesContent":["import { css } from '@emotion/core'\nimport { Tokens, tokens } from '@avito/tokens'\n\ntype Theme = Tokens\n\nexport type TextProperties = Partial<{\n  fontFamily: string,\n  fontSize: 'xs' | 's' | 'm' | 'l' | 'xl' | 'xxl' | 'xxxl' | 'xxxxl' | 'xxxxxl' | number | string,\n  lineHeight: 'inherit' | 'none' | 'normal' | 'dense' | number,\n  letterSpacing: number,\n  fontWeight: 'light' | 'normal' | 'bold',\n  italic: boolean,\n  noWrap: boolean,\n  wrap: boolean,\n  pre: boolean,\n  bold: boolean,\n  light: boolean,\n  uppercase: boolean,\n  truncate: boolean,\n  crop: boolean,\n  underline: boolean | 'dotted' | 'dashed',\n  smoothing: 'auto' | 'antialiased' | 'subpixel',\n}>\n\ntype Width = number\ntype Height = 's' | 'm' | 'l' | 'auto' | number\n\nexport type DimensionProperties = Partial<{\n  /** Ширина блока */\n  width?: Width,\n  /** Максимальная ширина блока */\n  maxWidth?: Width,\n  /** Минимальная ширина блока */\n  minWidth?: Width,\n  /** Высота блока */\n  height?: Height,\n  /** Минимальная высота блока */\n  minHeight?: Height,\n  /** Максимальная высота блока */\n  maxHeight?: Height,\n  /** Уменьшать при нехватке пространства */\n  shrink?: boolean,\n  /** Занять все возможзное пространство */\n  grow?: boolean,\n}>\n\ntype Display = { display: 'block' | 'inline' | 'inline-block' | 'flex' | 'inline-flex' | null }\nexport type VisibilityProperties = Partial<{\n  visible: boolean,\n  opacity: number\n}>\n\ntype SpaceValues = keyof Theme['space'] | 'none' | 'auto' | number\n\nexport type MarginProperties = Partial<{\n  /** Внешний отступ со всех сторон */\n  m: SpaceValues,\n  /** Внешний отступ слува и справа */\n  mx: SpaceValues,\n  /** Внешний отступ сверху и снизу */\n  my: SpaceValues,\n  /** Внешний отступ сверху */\n  mt: SpaceValues,\n  /** Внешний отступ справа */\n  mr: SpaceValues,\n  /** Внешний отступ снизу */\n  mb: SpaceValues,\n  /** Внешний отступ слева */\n  ml: SpaceValues,\n}>\nexport type PaddingProperties = Partial<{\n  /** Внутренний отступ */\n  p: SpaceValues,\n  /** Внутренний отступ слева и справа */\n  px: SpaceValues,\n  /** Внутренний отступ сверху и снизу */\n  py: SpaceValues,\n  /** Внутренний отступ сверху */\n  pt: SpaceValues,\n  /** Внутренний отступ справа */\n  pr: SpaceValues,\n  /** Внутренний отступ снизу */\n  pb: SpaceValues,\n  /** Внутренний отступ слева */\n  pl: SpaceValues,\n}>\n\nexport type SpaceProperties = PaddingProperties & MarginProperties\n\ntype Align = 'left' | 'center' | 'right' | 'justify'\ntype Valign = 'top' | 'middle' | 'bottom' | 'baseline' | 'stretch'\n\nexport type AlignProperties = Partial<{\n  /** Горизонтальное выравнивание дочерних блоков */\n  align: Align\n  /** Вертикальное выравнивание */\n  valignSelf: Valign\n  /** Вертикальное выравнивание дочерних блоков */\n  valign: Valign\n}>\n\nexport type LayoutProperties = AlignProperties & Partial<{\n  /** Вертикальное направление дочерних элементов */\n  column: boolean,\n  /** Блочное поведение */\n  block: boolean,\n  /** Строчное поведение */\n  inline: boolean,\n  /** Переносить блоки на следующие строки если не хватило места */\n  wrap: boolean,\n  /** Положение элемента в потоке */\n  position: 'relative' | 'absolute' | 'static' | 'fixed',\n  /* Расстояние от верхнего края */\n  top: number,\n  /* Расстояние от нижнего края */\n  bottom: number,\n  /* Расстояние от левого края */\n  left: number,\n  /* Расстояние от правого края */\n  right: number,\n  /** Добавляет скролл */\n  scroll: boolean\n}>\n\nexport type BorderProperties = Partial<{\n  /** Стиль границ */\n  borderStyle: 'solid' | 'dotted' | 'dashed' | 'none',\n  /** Радиус границ */\n  borderRadius: number | 's' | 'm' | 'l' | 'circle',\n  /** Радиус границ */\n  rounded: number | 's' | 'm' | 'l' | 'circle',\n  /** Ширина границы */\n  borderWidth: number,\n}>\n\ntype OtherProperties = BorderProperties & Partial<{\n  focus: boolean | string,\n  disabled: boolean,\n  variant: 'primary' | 'secondary' | 'success' | 'warning' | 'error',\n  adjacentSelector: string,\n  shape?: 'pill' | 'square' | 'circle',\n  shadow?: string | boolean,\n  pointerEvents: boolean,\n}>\n\nexport type Colors = keyof Tokens['palette'] | 'transparent' | 'inherit' | (string & {})\n\nexport type ColorProperties = Partial<{\n  /** Цвет контента */\n  color: Colors,\n  /** Цвет контента при наведении */\n  colorHover: Colors,\n  /** Цвет контента при нажатии */\n  colorActive: Colors,\n  /** Цвет контента посещенной ссылки */\n  colorVisited: Colors,\n  /** Цвет контента в выбранном состоянии */\n  colorChecked: Colors,\n  /** Цвет контента в состоянии фокуса */\n  colorFocus: Colors,\n  /** Цвет контента в неакттивном состоянии */\n  colorDisabled: Colors,\n\n  /** Цвет фона */\n  bg: Colors,\n  /** Цвет фона при наведении */\n  bgHover: Colors,\n  /** Цвет фона при нажатии */\n  bgActive: Colors,\n  /** Цвет фона посещенной ссылки */\n  bgVisited: Colors,\n  /** Цвет фона в выбранном состоянии */\n  bgChecked: Colors,\n  /** Цвет фона в состоянии фокуса */\n  bgFocus: Colors,\n  /** Цвет фона в неакттивном состоянии */\n  bgDisabled: Colors,\n\n  /** Цвет ганиц */\n  borderColor: Colors,\n  /** Цвет границ при наведении */\n  borderColorHover: Colors,\n  /** Цвет границ при наведении */\n  borderColorActive: Colors,\n  /** Цвет границ посещенной ссылки */\n  borderColorVisited: Colors,\n  /** Цвет границ в выбранном состоянии */\n  borderColorChecked: Colors,\n  /** Цвет границ в состоянии фокуса */\n  borderColorFocus: Colors,\n  /** Цвет границ в неакттивном состоянии */\n  borderColorDisabled: Colors,\n\n  /** Цвет текста у плейсхолдера */\n  placeholderColor: Colors,\n\n  /** цвет оверлея */\n  overlay: Colors,\n  /** Цвет оверлея при наведении */\n  overlayHover: Colors,\n  /** Цвет оверлея при наведении */\n  overlayActive: Colors,\n  /** Цвет оверлея посещенной ссылки */\n  overlayVisited: Colors,\n  /** Цвет оверлея в выбранном состоянии */\n  overlayChecked: Colors,\n  /** Цвет оверлея в состоянии фокуса */\n  overlayFocus: Colors,\n  /** Цвет оверлея в неакттивном состоянии */\n  overlayDisabled: Colors,\n}>\n\nexport type StyleProperties = TextProperties & DimensionProperties & SpaceProperties & LayoutProperties\n  & ColorProperties & OtherProperties & VisibilityProperties\ntype UnionToIntersection<U> =\n  (boolean extends U ? (k: U)=>void : U extends any ? (k: U)=>void : never) extends ((k: infer I)=>void)\n  ? I : never\ntype IsUnion<T> = [T] extends [UnionToIntersection<T>] ? false : true\ntype OnlyLiteralString<T> = T extends string ? T : never\ntype IsChildren<T> = React.ReactNode extends T ? true : false\ntype Computable<T, Arg> = { [K in keyof T]: (T[K] | ((arg: Arg) => T[K])) }\n// String literals on unions, maybe optional\n// preset: 'force' | 'none', preset: 'force' and preset?: 'force' will all pass\ntype IsSwitchable<T> = IsUnion<NonNullable<T>> extends true ? true : T extends string | undefined ? true : false\n\nexport type SchemeType<\n  Props extends { [K in keyof Props]: Props[K] },\n  ComponentsProps = never,\n  ExtraStyleProps = {}\n> = {\n  style?: Partial<Computable<StyleProperties & ExtraStyleProps, Props>>,\n  props?: Partial<Computable<ComponentsProps, Props>>,\n  // Срабатывает ошибка рекурсии https://github.com/microsoft/TypeScript/issues/34933 в компоненте Icon\n  // Если написать так React.FunctionComponent<ComponentsProps>\n  component?: any,\n} & {\n  [Key in keyof Props]?: IsSwitchable<Props[Key]> extends true\n    ? { [Key2 in OnlyLiteralString<Props[Key]>]?: SchemeType<Props, ComponentsProps, ExtraStyleProps> }\n    : SchemeType<Props, ComponentsProps, ExtraStyleProps>\n}\n\nexport interface Slot<OutProps = never, ExtraStyles = {}> {}\nexport type ComponentTheme<Props, Scheme = {}, Extras = {}> = Extras & {\n  defaultProps?: Partial<Props>,\n  mapProps?: (props: Props) => Partial<Props>,\n  scheme: {\n    [K in keyof Scheme]: Scheme[K] extends (Slot<infer OutProps, infer ExtraStyles> | undefined)\n      ? SchemeType<Props, OutProps, ExtraStyles>\n      : Scheme[K]\n  }\n}\n\nconst computedCrop = (crop: number, targetHeight: number) => {\n  const value = (crop + (targetHeight - 1) * 16) / 32\n\n  return Math.round(value * 100) / 100\n}\n\nconst spaceValue = (value: string | number, spaces: {}): string => {\n  if (typeof value === 'number') {\n    return `${value}px`\n  } else {\n    return spaces[value] ? `${spaces[value]}px` : value === 'auto' ? 'auto' : '0px'\n  }\n}\n\nconst maps = {\n  inline: {\n    block: 'inline-block',\n    inline: 'inline-block',\n    'inline-block': 'inline-block',\n    'flex': 'inline-flex',\n    'inline-flex': 'inline-flex',\n  },\n  block: {\n    block: 'block',\n    inline: 'block',\n    'inline-block': 'block',\n    'flex': 'flex',\n    'inline-flex': 'flex',\n  },\n  align: {\n    block: 'text-align',\n    inline: 'text-align',\n    'inline-block': 'text-align',\n    'flex': 'justify-content',\n    'inline-flex': 'justify-content',\n  },\n  justifyContent: {\n    left: 'flex-start',\n    center: 'center',\n    right: 'flex-end',\n    justify: 'space-between',\n  },\n  alignColumn: {\n    left: 'flex-start',\n    center: 'center',\n    right: 'flex-end',\n    justify: 'stretch',\n  },\n  alignFlex: {\n    top: 'flex-start',\n    middle: 'center',\n    bottom: 'flex-end',\n    baseline: 'baseline',\n    stretch: 'stretch',\n  },\n  verticalAlign: {\n    top: 'top',\n    middle: 'middle',\n    bottom: 'bottom',\n    baseline: 'baseline',\n    stretch: 'baseline',\n  },\n  dimension: {\n    width: 'width',\n    maxWidth: 'max-width',\n    minWidth: 'min-width',\n    height: 'height',\n    maxHeight: 'max-height',\n    minHeight: 'min-height',\n  },\n  color: {\n    color: 'color',\n    colorHover: 'color',\n    colorActive: 'color',\n    colorVisited: 'color',\n    colorFocus: 'color',\n    colorChecked: 'color',\n    colorDisabled: 'color',\n    bg: 'background-color',\n    bgHover: 'background-color',\n    bgActive: 'background-color',\n    bgVisited: 'background-color',\n    bgFocus: 'background-color',\n    bgChecked: 'background-color',\n    bgDisabled: 'background-color',\n    borderColor: 'border-color',\n    borderColorHover: 'border-color',\n    borderColorActive: 'border-color',\n    borderColorVisited: 'border-color',\n    borderColorFocus: 'border-color',\n    borderColorChecked: 'border-color',\n    borderColorDisabled: 'border-color',\n  },\n  webkitSmoothing: {\n    auto: 'auto',\n    antialiased: 'antialiased',\n    subpixel: 'subpixel-antialiased',\n  },\n  mozSmoothing: {\n    auto: 'auto',\n    antialiased: 'grayscale',\n    subpixel: 'grayscale',\n  },\n}\n\nconst execComputables = (object: object, arg: any) => {\n  for (const key in object) {\n    if (typeof object[key] === 'function') {\n      object[key] = object[key](arg)\n    }\n  }\n  return object\n}\n\nexport const foldScheme = (scheme: any, props: any, only?: 'props' | 'style' | 'component') => {\n  const result = {\n    style: {},\n    props: {},\n    component: null,\n  }\n\n  if (!scheme) return result\n\n  for (const prop in scheme) {\n    if (['style', 'props'].includes(prop) && (!only || only === prop)) {\n      Object.assign(result[prop], scheme[prop])\n\n      continue\n    }\n\n    if (prop === 'component' && (!only || only === prop)) {\n      result.component = scheme.component\n\n      continue\n    }\n\n    const value = props[prop]\n    const nestedConfig = scheme[prop]\n\n    const switchBranch = nestedConfig[value]\n    if (switchBranch) {\n      const data = foldScheme(switchBranch, props, only)\n\n      Object.assign(result.style, data.style)\n      Object.assign(result.props, data.props)\n      data.component && (result.component = data.component)\n\n      continue\n    }\n\n    if (value) {\n      const data = foldScheme(nestedConfig, props, only)\n\n      Object.assign(result.style, data.style)\n      Object.assign(result.props, data.props)\n      data.component && (result.component = data.component)\n    }\n  }\n\n  execComputables(result.props, props)\n  execComputables(result.style, props)\n\n  return result\n}\n\nexport const getStyles = (params: StyleProperties & Display, tokens: Tokens) => {\n  let css = 'box-sizing: border-box;'\n  const { font, dimension, space, palette, focus, shape } = tokens\n\n  if (!params) return css\n\n  let margin: string[] = []\n  let padding: string[] = []\n  let hoverState = []\n  let activeState = []\n  let visitedState = []\n  let focusState = []\n  let disabledState = []\n  let checkedState = []\n  let display = ''\n  let width = ''\n\n  const colorRule = (param: string, value: Colors) => {\n    if (!/^overlay/.test(param)) {\n      return `${maps.color[param]}: ${palette[value] || value};`\n    }\n    const { borderWidth = 0 } = params\n    return `\n      &::after {\n        content: \"\";\n        position: absolute;\n        pointer-events: none;\n        left: -${borderWidth}px;\n        right: -${borderWidth}px;\n        top: -${borderWidth}px;\n        bottom: -${borderWidth}px;\n        border-radius: inherit;\n        background: ${palette[value] || value};\n      }\n    `\n  }\n\n  for (const _param in params) {\n    const param = _param as keyof typeof params\n    let value = params[_param]\n\n    if (value === null || value === undefined) continue\n\n    // Exhaustive switch\n    switch (param) {\n      case 'fontFamily':\n        css += `font-family: ${value};`\n\n        break\n      case 'fontSize':\n        css += `font-size: ${font.fontSize[value] || value}px;`\n\n        break\n      case 'lineHeight':\n        css += `line-height: ${font.lineHeight[value] || value};`\n\n        break\n      case 'letterSpacing':\n        css += `letter-spacing: ${value}px;`\n\n        break\n      case 'fontWeight':\n        if (params.bold || params.light) break\n\n        css += `font-weight: ${value};`\n\n        break\n      case 'bold':\n        css += 'font-weight: 600;'\n\n        break\n      case 'light':\n        css += 'font-weight: 300;'\n\n        break\n      case 'italic':\n        css += 'font-style: italic;'\n\n        break\n      case 'noWrap':\n        css += 'white-space: nowrap;'\n\n        break\n      case 'pre':\n        css += 'white-space: pre;'\n\n        break\n      case 'wrap':\n        css += 'flex-wrap: wrap; word-break: break-all;'\n\n        break\n      case 'uppercase':\n        css += 'text-transform: uppercase;'\n\n        break\n      case 'truncate':\n        display = 'inline-block'\n\n        css += `\n          max-width: 100%;\n          vertical-align: top;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          overflow-wrap: normal;\n          overflow: hidden;\n        `\n\n        break\n      case 'crop': {\n        if (!params.lineHeight) break\n\n        const lineHeight = font.lineHeight[params.lineHeight] || params.lineHeight\n        display = 'inline-block'\n\n        css += `\n          && {\n            margin-top: 0;\n            margin-bottom: 0;\n          }\n\n          &::before, &::after {\n            content: '';\n            display: block;\n            height: 0;\n            width: 0;\n          }\n\n          &::before { margin-bottom: -${computedCrop(font.crop.top, lineHeight)}em }\n          &::after { margin-top: -${computedCrop(font.crop.bottom, lineHeight)}em }\n        `\n\n        break\n      }\n      case 'underline':\n        css += `\n          cursor: pointer;\n\n          padding-bottom: ${font.underline.offset}px;\n          border-bottom: ${font.underline.height}px ${typeof value === 'string' ? value : 'solid'} currentColor;\n        `\n\n        break\n      case 'smoothing':\n        css += `\n          -webkit-font-smoothing: ${maps.webkitSmoothing[value]};\n          -moz-osx-font-smoothing: ${maps.mozSmoothing[value]};\n        `\n\n        break\n      case 'width':\n        width = value > 1 ? `${value}px` : `${value * 100}%`\n\n        break\n      case 'minWidth':\n      case 'maxWidth':\n        css += `${maps.dimension[param]}: ${value > 1 ? `${value}px` : `${value * 100}%`};`\n\n        break\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n        value = dimension.rowHeight[value] || value\n\n        if (value === 'auto') {\n          css += `${maps.dimension[param]}: auto;`\n        } else {\n          css += `${maps.dimension[param]}: ${value > 1 ? `${value}px` : `${value * 100}%`};`\n        }\n\n        break\n      case 'display':\n        display = value\n\n        break\n      case 'inline':\n        display = params.display ? maps.inline[params.display] : 'inline-block'\n        width = ''\n\n        break\n      case 'block': {\n        display = params.display ? maps.block[params.display] : 'block'\n        width = '100%'\n\n        break\n      }\n      case 'grow':\n        css += `flex-grow: ${value ? '1' : '0'};`\n\n        break\n      case 'shrink':\n        css += `flex-shrink: ${value ? '1' : '0'};`\n\n        break\n      case 'borderWidth':\n        css += `border-width: ${value}px;`\n\n        if (params.borderStyle) break\n\n        css += 'border-style: solid;'\n\n        break\n      case 'rounded':\n      case 'borderRadius':\n        if (params.shape === 'circle' || params.shape === 'pill') break\n\n        // NOTE: для круга лучше использовать shape\n        css += `border-radius: ${value === 'circle' ? '100' : shape.borderRadius[value] || value}px;`\n\n        break\n      case 'align': {\n        if (!params.display) break\n\n        let prop\n\n        if (params.column) {\n          prop = 'align-items'\n          value = maps.alignColumn[value]\n        } else {\n          prop = maps.align[params.display]\n\n          if (prop === 'justify-content') {\n            value = maps.justifyContent[value]\n          }\n        }\n\n        css += `${prop}: ${value};`\n\n        break\n      }\n      case 'valign':\n        css += `align-items: ${maps.alignFlex[value]};`\n\n        break\n      case 'valignSelf': {\n        css += `align-self: ${maps.alignFlex[value]};vertical-align: ${maps.verticalAlign[value]};`\n\n        break\n      }\n      case 'column':\n        css += 'flex-direction: column;'\n\n        break\n      case 'm':\n        value = spaceValue(value, space)\n        margin = [value, value, value, value]\n\n        break\n      case 'mx':\n        value = spaceValue(value, space)\n        margin[1] = value\n        margin[3] = value\n\n        break\n      case 'my':\n        value = spaceValue(value, space)\n        margin[0] = value\n        margin[2] = value\n\n        break\n      case 'mt':\n        value = spaceValue(value, space)\n        margin[0] = value\n\n        break\n      case 'mr':\n        value = spaceValue(value, space)\n        margin[1] = value\n\n        break\n      case 'mb':\n        value = spaceValue(value, space)\n        margin[2] = value\n\n        break\n      case 'ml':\n        value = spaceValue(value, space)\n        margin[3] = value\n\n        break\n      case 'p':\n        value = spaceValue(value, space)\n        padding = [\n          `padding-top: ${value};`,\n          `padding-right: ${value};`,\n          `padding-bottom: ${value};`,\n          `padding-left: ${value};`,\n        ]\n\n        break\n      case 'px':\n        value = spaceValue(value, space)\n        padding[1] = `padding-right: ${value};`\n        padding[3] = `padding-left: ${value};`\n\n        break\n      case 'py':\n        value = spaceValue(value, space)\n        padding[0] = `padding-top: ${value};`\n        padding[2] = `padding-bottom: ${value};`\n\n        break\n      case 'pt':\n        value = spaceValue(value, space)\n        padding[0] = `padding-top: ${value};`\n\n        break\n      case 'pr':\n        value = spaceValue(value, space)\n        padding[1] = `padding-right: ${value};`\n\n        break\n      case 'pb':\n        value = spaceValue(value, space)\n        padding[2] = `padding-bottom: ${value};`\n\n        break\n      case 'pl':\n        value = spaceValue(value, space)\n        padding[3] = `padding-left: ${value};`\n\n        break\n      case 'color':\n      case 'bg':\n      case 'borderColor':\n      case 'overlay':\n        css += colorRule(param, value)\n\n        break\n      case 'colorHover':\n      case 'bgHover':\n      case 'borderColorHover':\n      case 'overlayHover':\n        hoverState.push(colorRule(param, value))\n\n        break\n      case 'colorActive':\n      case 'bgActive':\n      case 'borderColorActive':\n      case 'overlayActive':\n        activeState.push(colorRule(param, value))\n\n        break\n      case 'colorVisited':\n      case 'bgVisited':\n      case 'borderColorVisited':\n      case 'overlayVisited':\n        visitedState.push(colorRule(param, value))\n\n        break\n      case 'colorFocus':\n      case 'bgFocus':\n      case 'borderColorFocus':\n      case 'overlayFocus':\n        focusState.push(colorRule(param, value))\n\n        break\n      case 'colorChecked':\n      case 'bgChecked':\n      case 'borderColorChecked':\n      case 'overlayChecked':\n        checkedState.push(colorRule(param, value))\n\n        break\n      case 'colorDisabled':\n      case 'bgDisabled':\n      case 'borderColorDisabled':\n      case 'overlayDisabled':\n        disabledState.push(colorRule(param, value))\n\n        break\n      case 'placeholderColor':\n        css += `&::placeholder, & *::placeholder, & *[data-placeholder] {color: ${palette[value] || value};-webkit-text-fill-color: currentcolor;}`\n\n        break\n      case 'borderStyle':\n        css += `border-style: ${value};`\n\n        break\n      case 'position':\n        css += `position: ${value};`\n\n        break\n      case 'top':\n      case 'bottom':\n      case 'left':\n      case 'right':\n        css += `${param}: ${Math.abs(value) > 1 ? `${value}px` : `${value * 100}%`};`\n\n        break\n      case 'focus': {\n        css += 'outline: none;'\n\n        if (!value) break\n\n        const color = typeof value === 'string' ? value : focus.color[params.variant || 'default']\n\n        focusState.push(`\n          box-shadow: ${focus.shape} ${palette[color] || color};\n          position: relative;\n          z-index: 2;\n        `)\n\n        break\n      }\n      case 'visible':\n        css += value === false ? 'visibility: hidden;' : ''\n        break\n      case 'opacity':\n        css += `opacity: ${value};`\n        break\n      case 'disabled':\n        if (!value) break\n\n        css += 'pointer-events: none;'\n\n        break\n      case 'shape': {\n        if (value === 'circle') {\n          /**\n           * Блинк округляет большой радиус до целого вниз, заметно на маленьких кружочках нечетной высоты\n           * https://jr.avito.ru/browse/MDP-1395\n           */\n          css += 'border-radius: 50%;'\n        }\n        if (value === 'pill') {\n          // не совсем круглые колбаски пусть уж будут\n          css += 'border-radius: 100px;'\n        }\n        if (value === 'circle' || value === 'square') {\n          const targetHeight = params.height || params.minHeight\n\n          if (targetHeight) {\n            width = `${dimension.rowHeight[targetHeight!] || targetHeight}px;`\n          }\n        }\n\n        break\n      }\n      case 'shadow': {\n        if (typeof value !== 'string') break\n\n        css += `box-shadow: ${value};`\n\n        break\n      }\n      case 'pointerEvents': {\n        css += `pointer-events: ${value ? 'auto' : 'none'};`\n        break\n      }\n      default:\n        // Exhaustive switch guard\n        assertExhaustive<'variant' | 'adjacentSelector' | 'trancate' | 'scroll'>(param)\n    }\n  }\n\n  if (padding.length !== 0) {\n    css += `&&& {\n      ${padding.join('')}\n    }`\n  }\n  if (margin.length !== 0) {\n    css += `&&& {\n      ${margin[0] ? `margin-top: ${margin[0]};` : ''}\n      ${margin[1] ? `margin-right: ${margin[1]};` : ''}\n      ${margin[2] ? `margin-bottom: ${margin[2]};` : ''}\n      ${margin[3] ? `margin-left: ${margin[3]};` : ''}\n    }`\n  }\n\n  let selector = null\n  if (params.adjacentSelector) {\n    const before = params.adjacentSelector\n\n    selector = {\n      checked: `${before}:checked + &, ${before}[aria-checked=true] + &`,\n      visited: `${before}:visited + &`,\n      hover: `${before}:hover + &`,\n      active: `${before}:enabled:active + &, ${before}[data-state=active] + &`,\n      focus: `${before}:focus + &`,\n      disabled: `${before}:disabled + &, ${before}[aria-disabled=true] + &`,\n    }\n  } else {\n    selector = {\n      checked: '&[aria-checked=true], &[data-state~=checked]',\n      visited: '&:visited',\n      hover: '&:hover',\n      active: '&:not(:disabled):active, &[data-state~=active]',\n      focus: '&&:focus, &&[data-state~=focus]',\n      disabled: '&:disabled, &[aria-disabled=true], &[data-state~=disabled]',\n    }\n  }\n\n  if (checkedState.length) {\n    css += `${selector.checked}{${checkedState.join('')}}`\n  }\n  if (visitedState.length) {\n    css += `${selector.visited}{${visitedState.join('')}}`\n  }\n  if (hoverState.length) {\n    css += `${selector.hover}{${hoverState.join('')}}`\n  }\n  if (activeState.length) {\n    css += `${selector.active}{${activeState.join('')}}`\n  }\n  if (focusState.length) {\n    css += `${selector.focus}{${focusState.join('')}}`\n  }\n  if (disabledState.length) {\n    css += `${selector.disabled}{${disabledState.join('')}}`\n  }\n\n  if (width.endsWith('%') && (margin[1] || margin[3])) {\n    width = `calc(${width} - ${margin[1] || '0px'} - ${margin[3] || '0px'})`\n  }\n\n  if (width) {\n    css += `width: ${width};`\n  }\n  if (display) {\n    css += `display: ${display};`\n  }\n\n  return css\n}\n\ntype FoldedItemTheme<ItemTheme> = ItemTheme extends SchemeType<infer InProps, infer OutProps, infer ExtraStyle> ? {\n  style: StyleProperties & ExtraStyle,\n  props: OutProps,\n  component: React.FunctionComponent<OutProps> | React.ComponentClass<OutProps>,\n} : never\n\nexport type FoldThemeParamsReturn<ComponentTheme> = ComponentTheme extends { scheme: object } ? {\n  [K in keyof ComponentTheme['scheme']]: FoldedItemTheme<ComponentTheme['scheme'][K]>\n} : never\n\nexport function foldThemeParams<T extends { scheme: { [key: string]: any } }>(\n  props: any,\n  { scheme }: T\n): FoldThemeParamsReturn<T> {\n  const result: any = {}\n\n  let name: keyof typeof scheme\n  for (name in scheme) {\n    result[name] = foldScheme(scheme[name], props)\n  }\n\n  return result\n}\n\ntype valueof<T, Key = string> = T[Key extends keyof T ? Key : keyof T]\ntype ThemeStyle<ComponentTheme, Key> = ComponentTheme extends object\n  ? valueof<FoldThemeParamsReturn<ComponentTheme>, Key>['style']\n  : never\n\ninterface Selector<Props, ComponentTheme, Key> {\n  t: (props: Props, theme: Theme, schemeStyle: ThemeStyle<ComponentTheme, Key>) => any;\n  f: (props: Props, theme: Theme) => any;\n}\n\nexport function createClassName<Props, ComponentTheme extends object | null = null, PrimaryComponent = string>(\n  createRule: (\n    schemeStyle: ThemeStyle<ComponentTheme, PrimaryComponent>,\n    props: Props,\n    theme: Theme) => StyleProperties & Display,\n  createUserRule?: (\n    textRules: string,\n    props: Props,\n    theme: Theme,\n    schemeStyle: ThemeStyle<ComponentTheme, PrimaryComponent>) => any\n): Selector<Props, ComponentTheme, PrimaryComponent>[ComponentTheme extends object ? 't' : 'f'] {\n  return (props: Props, theme: Theme, schemeStyle?: ThemeStyle<ComponentTheme, PrimaryComponent>) => {\n    const styles = createRule(schemeStyle as any, props, theme)\n    const textRules = getStyles(styles, theme)\n\n    const resultRules = createUserRule\n      ? createUserRule(textRules, props, theme, schemeStyle as any)\n      : textRules\n\n\n    return typeof resultRules === 'string' ? css`${resultRules}` : resultRules\n  }\n}\n\nfunction assertExhaustive<K>(v: K) {}\n"],"file":"getThemeStyle.js"}