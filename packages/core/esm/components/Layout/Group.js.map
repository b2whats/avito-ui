{"version":3,"sources":["../../../src/components/Layout/Group.tsx"],"names":["React","useRef","useContext","useState","useEffect","scrollIntoView","useTheme","Stack","GroupContext","createContext","useGroupHook","ref","targetProps","groupContext","positions","setPositions","current","elements","push","node","prevNode","matches","pos","firstElementChild","lastElementChild","join","parentElement","checked","includes","value","mode","behavior","scrollMode","boundary","block","grow","orientation","spacing","trim","onClick","isFirstChecked","role","disabled","tabIndex","onKeyDown","Group","children","name","onChange","props","_demo","fallbackValue","fallbackChange","e","event","target","currentTarget","scroll","tartetValue","Number","isNaN","update","type","tagName","getAttribute","Array","isArray","filter","val","length","currentIndex","findIndex","element","count","next","key","preventDefault","focus","click","column","context","undefined","Boolean","aria"],"mappings":"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","sourcesContent":["import React, { useRef, useContext, useState, useEffect } from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport { useTheme } from '../../theme'\nimport { GroupProps } from './contract'\nimport { Stack } from './Stack'\n\ntype GroupContext = {\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void,\n  onKeyDown?: (event: React.KeyboardEvent<HTMLElement>) => void,\n  checked?: (string | number | undefined | null)[],\n  block?: boolean,\n  spacing?: boolean,\n  disabled?: boolean,\n  mode?: 'radio' | 'checkbox',\n  elements: React.MutableRefObject<any[]>,\n  orientation: 'horizontal' | 'vertical'\n}\n\ntype GroupTargetHook = {\n  grow?: boolean,\n  role?: 'radio' | 'checkbox',\n  tabIndex?: number,\n  disabled?: boolean,\n  'data-group'?: string,\n  checked?: boolean,\n  onClick?: (event: any) => void,\n  onKeyDown?: (event: any) => void,\n  [key: string]: any,\n}\n\nexport const GroupContext = React.createContext<GroupContext | null>(null)\n\nexport function useGroupHook<T extends GroupTargetHook>(\n  ref: React.MutableRefObject<HTMLElement | null>,\n  targetProps: T\n): T & GroupTargetHook {\n  const groupContext = useContext(GroupContext)\n\n  if (!groupContext) return targetProps as T\n\n  const [positions, setPositions] = useState<string>('')\n\n  useEffect(() => {\n    if (groupContext && ref.current !== null) {\n      groupContext.elements.current.push(ref.current)\n\n      let node: HTMLElement | null = ref.current\n      let prevNode = null\n\n      while (node) {\n        if (node.matches('[role*=group]')) {\n          let pos = []\n          node.firstElementChild === prevNode && (pos.push('first'))\n          node.lastElementChild === prevNode && (pos.push('last'))\n\n          setPositions(pos.join(' '))\n          break\n        } else {\n          prevNode = node\n          node = node.parentElement\n        }\n      }\n\n      const checked = groupContext.checked && groupContext.checked.includes(targetProps.value)\n\n      if (groupContext.mode === 'radio' && checked) {\n        scrollIntoView(ref.current, {\n          behavior: 'smooth',\n          scrollMode: 'if-needed',\n          boundary: node,\n        })\n      }\n    }\n  }, [])\n\n  if (groupContext.block) {\n    targetProps.grow = true\n  }\n\n  targetProps['data-group'] = (`${groupContext.orientation} ${groupContext.spacing ? 'spacing' : ''} ${positions}`).trim()\n\n  if (groupContext.onClick) {\n    const checked = groupContext.checked && groupContext.checked.includes(targetProps.value)\n    const isFirstChecked = !groupContext.checked && positions.includes('first')\n\n    targetProps = {\n      checked: checked || false,\n      role: groupContext.mode,\n      disabled: groupContext.disabled,\n      tabIndex: (checked && !targetProps.disabled) || isFirstChecked || groupContext.mode !== 'radio' ? 0 : -1,\n      onClick: groupContext.onClick,\n      onKeyDown: groupContext.onKeyDown,\n      ...targetProps,\n    }\n  }\n\n  return targetProps as T & GroupTargetHook\n}\n\n\nexport const Group = ({ children, block, mode, value, name, disabled, onChange, ...props }: GroupProps) => {\n  const elements = useRef<(HTMLInputElement | HTMLButtonElement)[]>([])\n\n  if (!onChange && useTheme()._demo && mode === 'radio') {\n    const [fallbackValue, fallbackChange] = useState(value)\n    onChange = e => fallbackChange(e.value)\n    value = fallbackValue\n  }\n\n  const onClick = (event: React.MouseEvent<HTMLElement>) => {\n    if (!onChange || !mode) return\n\n    const { currentTarget: target } = event as React.MouseEvent<HTMLInputElement>\n\n    if (props.scroll) {\n      scrollIntoView(target, {\n        behavior: 'smooth',\n        scrollMode: 'if-needed',\n      })\n    }\n\n    const tartetValue = Number.isNaN(Number(target.value)) ? target.value : Number(target.value)\n    const update = { mode, name, value, type: 'toggle-group' }\n\n    if (mode === 'checkbox') {\n      const checked = target.tagName === 'INPUT'\n        ? !target.checked\n        : target.getAttribute('aria-checked') === 'true'\n\n      update.value = Array.isArray(value)\n        ? checked\n          ? value.filter(val => val !== tartetValue)\n          : [...value, tartetValue]\n        : [tartetValue]\n\n      update.value = update.value.length > 0 ? update.value : null\n    }\n\n    if (mode === 'radio') {\n      update.value = tartetValue\n    }\n\n    onChange(update)\n  }\n\n  const onKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    const node = event.currentTarget\n    let currentIndex = elements.current.findIndex(element => element === node)\n    const count = elements.current.length\n    let next\n\n    do {\n      switch (event.key) {\n        case 'ArrowRight':\n        case 'ArrowDown':\n          event.preventDefault()\n          currentIndex = currentIndex === count - 1 ? 0 : currentIndex + 1\n          next = elements.current[currentIndex]\n          break\n        case 'ArrowUp':\n        case 'ArrowLeft':\n          event.preventDefault()\n          currentIndex = currentIndex === 0 ? count - 1 : currentIndex - 1\n          next = elements.current[currentIndex]\n          break\n      }\n    } while (next && next.disabled)\n\n    if (next) {\n      next.focus()\n      next.click()\n    }\n  }\n\n  const orientation = props.column ? 'vertical' : 'horizontal'\n\n  const context: GroupContext = {\n    onClick: onChange ? onClick : undefined,\n    onKeyDown: mode === 'radio' ? onKeyDown : undefined,\n    checked: value !== null && value !== undefined\n      ? Array.isArray(value) ? value : [value]\n      : undefined,\n    block,\n    spacing: Boolean(props.spacing),\n    mode,\n    disabled,\n    elements,\n    orientation,\n  }\n\n  const aria = {\n    role: mode === 'radio' ? 'radiogroup' : 'group',\n    'aria-orientation': orientation,\n  }\n\n  return (\n    <GroupContext.Provider value={context}>\n      <Stack inline={!block} {...props} {...aria}>{children}</Stack>\n    </GroupContext.Provider>\n  )\n}\n"],"file":"Group.js"}