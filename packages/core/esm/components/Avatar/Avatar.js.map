{"version":3,"sources":["../../../src/components/Avatar/Avatar.tsx"],"names":["React","Children","useState","useEffect","isValidElement","foldThemeParams","createClassName","css","uiComponent","filterProps","omit","Text","avatarTheme","avatarClassName","themeStyle","props","display","position","shrink","grow","textRules","imageClassName","Avatar","theme","tokens","_","setRef","src","isFallback","setFallback","onError","Wrapper","Badge","Fallback","Tag","as","alt","aria","role","onClick","disabled","renderFallback","children","fallbackProps","only","toUpperCase","style","badge"],"mappings":"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","sourcesContent":["import React, { Children, ReactNode, useState, useEffect, isValidElement } from 'react'\nimport { foldThemeParams, createClassName, css } from '../../styled-system'\nimport { uiComponent } from '../../theme'\nimport { filterProps, omit } from '../../utils'\nimport { IconProps } from '../Icon'\nimport { Text } from '../Text'\nimport { AvatarProps } from './contract'\nimport { avatarTheme } from './theme'\n\nconst avatarClassName = createClassName<AvatarProps, typeof avatarTheme>(\n  (themeStyle, props) => ({\n    display: 'inline-flex',\n    position: 'relative',\n    shrink: false,\n    grow: false,\n    ...themeStyle,\n    ...props,\n  }),\n  (textRules) => (`\n    user-select: none;\n    & *:nth-child(2) {\n      /* position badge above overlay */\n      z-index: 1;\n    }\n    ${textRules}\n  `)\n)\nconst imageClassName = css`\n  border-radius: inherit;\n  max-width: 100%;\n  max-height: 100%;\n`\n\nexport const Avatar = uiComponent('Avatar', avatarTheme)<\n  AvatarProps,\n  HTMLImageElement\n>((props, { theme, tokens }, [_, setRef]) => {\n  const [isFallback, setFallback] = useState(props.src == null)\n  const onError = () => setFallback(true)\n  useEffect(() => setFallback(props.src == null), [props.src])\n\n  const { Wrapper, Badge, Fallback } = foldThemeParams({ ...props, isFallback }, theme)\n\n  const Tag = props.as || 'span'\n  const alt = props.alt || 'Пользователь'\n  const aria = {\n    role: props.onClick ? 'button' : 'img',\n    'aria-disabled': props.disabled,\n  }\n  const renderFallback = (children: ReactNode, fallbackProps: IconProps) => (\n    isValidElement(children) ? <children.type {...fallbackProps} {...children.props} /> :\n    typeof children === 'function' ? Children.only(children(fallbackProps)) :\n    typeof children === 'string' ? <Text crop>{children}</Text> :\n    typeof props.alt === 'string' ? <Text crop>{props.alt[0].toUpperCase()}</Text> :\n    <Fallback.component {...fallbackProps} />)\n\n  // FIXME put onClick on img / fallback for easier badge clicks?\n  return (\n    <Tag css={avatarClassName(props, tokens, Wrapper.style)} {...aria} {...filterProps(omit(props, 'src'))}>\n      { isFallback\n        ? renderFallback(props.children, Fallback.props)\n        : <img css={imageClassName} draggable='false' src={props.src} onError={onError} alt={alt} /> }\n      { props.badge &&\n        <props.badge.type {...Badge.props} {...props.badge.props} /> }\n    </Tag>\n  )\n})\n"],"file":"Avatar.js"}