{"version":3,"sources":["../../../src/components/Textarea/Textarea.tsx"],"names":["React","useState","useUncontrolledInputHook","useSyntheticChange","foldThemeParams","createClassName","uiComponent","invokeAll","clearValue","TextareaCore","textareaTheme","wrapperClassName","themeStyle","props","display","valign","Textarea","onFocus","onBlur","theme","tokens","textareaRef","setTextareaRef","focus","setFocus","value","onChange","hasClear","Boolean","clearable","disabled","placeholder","deletePlaceholderOnFocus","handleFocus","handleBlur","handlePreventBlur","event","target","preventDefault","handleClear","current","IconClear","wrapperStyle","style","elementState","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useUncontrolledInputHook, useSyntheticChange } from '../../hooks/'\nimport { foldThemeParams, createClassName } from '../../styled-system/'\nimport { uiComponent } from '../../theme/'\nimport { invokeAll, clearValue } from '../../utils/'\nimport { TextareaProps } from './contract'\nimport { TextareaCore } from './TextareaCore'\nimport { textareaTheme } from './theme'\n\nconst wrapperClassName = createClassName<TextareaProps, typeof textareaTheme>(\n  (themeStyle, props) => ({\n    display: 'flex',\n    valign: 'top',\n    ...themeStyle,\n    ...props,\n  })\n)\n\n\nexport const Textarea = uiComponent('Textarea', textareaTheme)<TextareaProps, HTMLTextAreaElement>((\n  { onFocus, onBlur, ...props },\n  { theme, tokens },\n  [textareaRef, setTextareaRef]\n) => {\n  const [focus, setFocus] = useState(false)\n  const [value, onChange] = useSyntheticChange(...useUncontrolledInputHook(props))\n  const hasClear = Boolean(props.clearable)\n\n  props = {\n    ...props,\n    value,\n    clearable: Boolean(value && !props.disabled && (props.clearable === 'always' || props.clearable && focus)),\n    placeholder: theme.deletePlaceholderOnFocus && focus ? '' : props.placeholder,\n  }\n\n  const handleFocus = invokeAll(() => setFocus(true), onFocus)\n  const handleBlur = invokeAll(() => setFocus(false), onBlur)\n\n  const handlePreventBlur = (event: React.MouseEvent<HTMLElement>) => {\n    if (event.target['tagName'] !== 'TEXTAREA') event.preventDefault()\n  }\n\n  const handleClear = () => clearValue(textareaRef.current)\n\n  const { Textarea, IconClear } = foldThemeParams(props, theme)\n  const wrapperStyle = wrapperClassName(props, tokens, Textarea.style)\n\n  const elementState = `${props.disabled ? 'disabled' : ''} ${focus ? 'focus' : ''}`\n\n  return (\n    <label css={wrapperStyle} data-state={elementState} onMouseDown={handlePreventBlur}>\n      <TextareaCore\n        {...props}\n        onChange={onChange}\n        ref={setTextareaRef}\n        onFocus={handleFocus}\n        onBlur={handleBlur} />\n      { hasClear && <IconClear.component\n        {...IconClear.props}\n        valignSelf={undefined}\n        onClick={handleClear} /> }\n    </label>\n  )\n})\n"],"file":"Textarea.js"}