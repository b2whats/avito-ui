{"version":3,"sources":["../../../src/components/Text/Text.tsx"],"names":["React","foldThemeParams","createClassName","uiComponent","filterProps","textTheme","textClassName","themeStyle","props","display","width","height","textRules","strike","palette","Text","children","theme","tokens","textStyle","style","Tag","as"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,eAA1B;AACA,SAASC,WAAT;AACA,SAASC,WAAT;AAEA,SAASC,SAAT;;AAEA,IAAMC,aAAa,GAAGJ,eAAe,CACnC,UAACK,UAAD,EAAaC,KAAb;AAAA;AACEC,IAAAA,OAAO,EAAED,KAAK,CAACE,KAAN,IAAeF,KAAK,CAACG,MAArB,GAA8B,cAA9B,GAA+C;AAD1D,KAEKJ,UAFL,EAGKC,KAHL;AAAA,CADmC,EAMnC,UAACI,SAAD;AAAA,MAAcC,MAAd,QAAcA,MAAd;AAAA,MAA0BC,OAA1B,SAA0BA,OAA1B;AAAA,mHASID,MAAM,uOAUwB,OAAOA,MAAP,KAAkB,QAAlB,GAA6BC,OAAO,CAACD,MAAD,CAApC,GAA+C,cAVvE,+FAcJ,EAvBN,iBAyBID,SAzBJ;AAAA,CANmC,CAArC;AAmCA,OAAO,IAAMG,IAAI,GAAGZ,WAAW,CAAC,MAAD,EAASE,SAAT,CAAX,CAA+B,wBAA0D;AAAA,MAAvDW,QAAuD,SAAvDA,QAAuD;AAAA,MAA1CR,KAA0C;;AAAA,MAApBS,KAAoB,SAApBA,KAAoB;AAAA,MAAbC,MAAa,SAAbA,MAAa;;AAAA,yBAC1FjB,eAAe,CAACO,KAAD,EAAQS,KAAR,CAD2E;AAAA,MACnGF,IADmG,oBACnGA,IADmG;;AAE3G,MAAMI,SAAS,GAAGb,aAAa,CAACE,KAAD,EAAQU,MAAR,EAAgBH,IAAI,CAACK,KAArB,CAA/B;AACA,MAAMC,GAAG,GAAGb,KAAK,CAACc,EAAN,IAAY,MAAxB;AAEA,SACE,cAAC,GAAD;AAAK,IAAA,GAAG,EAAEH;AAAV,KAAyBf,WAAW,CAACI,KAAD,CAApC,GACIQ,QADJ,CADF;AAKD,CAVmB,CAAb","sourcesContent":["import React from 'react'\nimport { foldThemeParams, createClassName } from '../../styled-system/'\nimport { uiComponent } from '../../theme/'\nimport { filterProps } from '../../utils/'\nimport { TextProps } from './contract'\nimport { textTheme } from './theme'\n\nconst textClassName = createClassName<TextProps, typeof textTheme>(\n  (themeStyle, props) => ({\n    display: props.width || props.height ? 'inline-block' : 'inline',\n    ...themeStyle,\n    ...props,\n  }),\n  (textRules, { strike }, { palette }) => (`\n    li& {\n      list-style: none;\n    }\n\n    a& {\n      text-decoration: none;\n    }\n\n    ${strike ? `\n      position: relative;\n      white-space: nowrap;\n\n      &::after {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        border-top: 0.075em solid ${typeof strike === 'string' ? palette[strike] : 'currentcolor'};\n        height: calc(50% - 1px);\n        transform: rotateZ(-2deg);\n      }\n    ` : ''}\n\n    ${textRules}\n  `)\n)\n\nexport const Text = uiComponent('Text', textTheme)(({ children, ...props }: TextProps, { theme, tokens }) => {\n  const { Text } = foldThemeParams(props, theme)\n  const textStyle = textClassName(props, tokens, Text.style)\n  const Tag = props.as || 'span'\n\n  return (\n    <Tag css={textStyle} {...filterProps(props)}>\n      { children }\n    </Tag>\n  )\n})\n"],"file":"Text.js"}