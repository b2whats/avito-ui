{"version":3,"sources":["../../../../src/components/Positioner/modifiers/targetWidth.ts"],"names":["targetWidth","name","enabled","fn","phase","requires","effect","state","options","Object","entries","property","value","elements","popper","style","reference","offsetWidth","Math","abs"],"mappings":"AAUA,OAAO,IAAMA,WAAgC,GAAG;AAC9CC,EAAAA,IAAI,EAAE,aADwC;AAE9CC,EAAAA,OAAO,EAAE,KAFqC;AAG9CC,EAAAA,EAAE,EAAE,cAAM,CAAE,CAHkC;AAI9CC,EAAAA,KAAK,EAAE,aAJuC;AAK9CC,EAAAA,QAAQ,EAAE,CAAC,eAAD,CALoC;AAM9CC,EAAAA,MAAM,EAAE,sBAAwB;AAAA,QAArBC,KAAqB,QAArBA,KAAqB;AAAA,QAAdC,OAAc,QAAdA,OAAc;;AAC9B,uCAAgCC,MAAM,CAACC,OAAP,CAAeF,OAAf,CAAhC,qCAAyD;AAAA;AAAA,UAA7CG,QAA6C;AAAA,UAAnCC,KAAmC;;AACvD,UAAIA,KAAK,KAAK,WAAd,EAA2B;AACzBL,QAAAA,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBC,KAAtB,CAA4BJ,QAA5B,IAA4CJ,KAAK,CAACM,QAAN,CAAeG,SAAhB,CAA0CC,WAArF;AACD;;AAED,UAAI,OAAOL,KAAP,KAAiB,QAArB,EAA+B;AAC7BL,QAAAA,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBC,KAAtB,CAA4BJ,QAA5B,IAAwCO,IAAI,CAACC,GAAL,CAASP,KAAT,IAAkB,CAAlB,GAAyBA,KAAzB,UAAwCA,KAAK,GAAG,GAAhD,MAAxC;AACD;AACF;;AAED,WAAO,YAAM,CAAE,CAAf;AACD;AAlB6C,CAAzC","sourcesContent":["import { Modifier } from '@popperjs/core'\n\ntype Width = 'reference' | number\ntype Options = {\n  minWidth: Width,\n  width: Width,\n  maxWidth: Width\n}\nexport type TargetWidthModifier = Modifier<'targetWidth', Options>\n\nexport const targetWidth: TargetWidthModifier = {\n  name: 'targetWidth',\n  enabled: false,\n  fn: () => {},\n  phase: 'beforeWrite',\n  requires: ['computeStyles'],\n  effect: ({ state, options }) => {\n    for (const [property, value] of Object.entries(options)) {\n      if (value === 'reference') {\n        state.elements.popper.style[property] = `${(state.elements.reference as HTMLElement).offsetWidth}px`\n      }\n\n      if (typeof value === 'number') {\n        state.elements.popper.style[property] = Math.abs(value) > 1 ? `${value}px` : `${value * 100}%`\n      }\n    }\n\n    return () => {}\n  },\n}\n"],"file":"targetWidth.js"}