{"version":3,"sources":["../../src/utils/pick.ts"],"names":["pick","obj","ret","key","keys"],"mappings":"AAOA,OAAO,IAAMA,IAAY,GAAG,SAAfA,IAAe,CAACC,GAAD,EAAkB;AAC5C,MAAIC,GAAQ,GAAG,EAAf;AAEA,MAAIC,GAAJ;;AAH4C,oCAATC,IAAS;AAATA,IAAAA,IAAS;AAAA;;AAI5C,2BAAYA,IAAZ,2BAAkB;AAAbD,IAAAA,GAAa;;AAChB,QAAIA,GAAG,IAAIF,GAAX,EAAgB;AACdC,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWF,GAAG,CAACE,GAAD,CAAd;AACD;AACF;;AACD,SAAOD,GAAP;AACD,CAVM","sourcesContent":["interface PickFn {\n  <T, K extends (keyof T)[]>\n  (obj: T, ...keys: K): {\n    [K2 in Extract<keyof T, K[number]>]: T[K2]\n  }\n}\n\nexport const pick: PickFn = (obj, ...keys) => {\n  let ret: any = {}\n\n  let key: keyof typeof obj\n  for (key of keys) {\n    if (key in obj) {\n      ret[key] = obj[key]\n    }\n  }\n  return ret\n}\n"],"file":"pick.js"}